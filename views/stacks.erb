<div class="navbar navbar-fixed-top">
  <div class="navbar-inner">
    <div class="container">
      <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </a>
      <a class="brand" href="/">Coderprep</a>
      <div class="nav-collapse">
        <ul class="nav">
          <li class="active"><a href="/">Home</a></li>
          <li><a href="/lessons">Lessons</a></li>
          <li><a href="/contact">Contact</a></li>
        </ul>
        <ul class="nav pull-right">
        	<li>
        		<a role="button" data-toggle="modal" href="#signupModal">Sign Up</a>
        		<div id="signupModal" class="modal hide fade" tabindex="-1">
        			<div class="modal-header">
        				<button class="close" data-dismiss="modal">x</button>
        				<h3>Join the Coderprep Community</h3>
        			</div>
        			<div class="modal-body">
        				<div class="row-fluid">
        					<div class="span12">
				            <div class="span6">
					            <div class="logowrapper">
					            	<img class="logoicon" src="http://24.media.tumblr.com/tumblr_m1rt0fkQTZ1r8lg7to1_1280.jpg" alt="Ryan"/>
					            </div>
				            </div>
				            <div class="span6">
			                <form class="form-horizontal" action="/signup" method="post">
		                    <p class="help-block">Username</p>
		                    <div class="input-prepend">
	                        <span class="add-on">*</span><input class="prependedInput" size="16" type="text" name="username">
		                    </div>
		                    <p class="help-block">Email</p>
		                    <div class="input-prepend">
	                        <span class="add-on">*</span><input class="prependedInput" size="16" type="email" name="email">
		                    </div>
		                    <p class="help-block">Password</p>
		                    <div class="input-prepend">
		                    	<span class="add-on">*</span><input class="prependedInput" size="16" type="password" name="password">
		                    </div>
		                  	<hr>
		                    <div class="help-block">
	                        <button type="submit" class="btn btn-large btn-info">Sign Up</button>
		                    </div>
			                </form>
				            </div>
					        </div>
						    </div>
							</div>
					    <div class="modal-footer">
					        <p><i>Don't want to create an account? Try the demo then!</i></p>
					    </div>
						</div>
					</li>
        	<li class="divider-vertical"></li>
        	<li class="dropdown">
        		<a class="dropdown-toggle" href="#" data-toggle="dropdown">Sign In <b class="caret"></b></a>
						<div class="dropdown-menu" style="padding: 15px; padding-bottom: 0px;">
							<form method="post" action="/login" accept-charset="UTF-8">
								<input style="margin-bottom: 15px;" type="text" placeholder="Username" id="username" name="username">
								<input style="margin-bottom: 15px;" type="password" placeholder="Password" id="password" name="password">
								<input style="float: left; margin-right: 10px;" type="checkbox" name="remember-me" id="remember-me" value="1">
								<label class="string optional" for="user_remember_me"> Remember me</label>
								<input class="btn btn-primary btn-block" type="submit" id="sign-in" value="Sign In">
								<label style="text-align:center;margin-top:5px">or</label>
                <input class="btn btn-primary btn-block" type="button" id="sign-in-facebook" value="Sign In with Facebook">
							</form>
						</div>
        	</li>
        </ul>
      </div><!--/.nav-collapse -->
    </div>
  </div>
</div>
  
<br/>
<br/>
<br/>
<div class="container">
	<div class="row">
	  <div class="span12">
	  	<h2>Stacks</h2>
	  	<hr>
	  	<div class="clearfix"></div>
	  	<h3>The basics for interviews</h3>
	  	<p>Stacks are a data structure that is used for storing and retrieving elements in Last-in First-out order.</p>
	  	<img src="/images/stacks/stacks.png"/>
	  	<br/>
	  	<br/>
	  	<p>There are three operations that a stack should generally have:</p>
	  	<ol>
	  		<li><i>push</i> - puts an element at the top of the stack</li>
	  		<li><i>pop</i> - returns the topmost element of the stack and removed it from the data structure</li>
	  		<li><i>peek</i> - same as pop but does not remove the element from the data structure</li>
	  	</ol>
	  	<p>*All of the above three operations are O(1)</p>
	  	<br/>

	  	<h3>Implementation</h3>
	  	<p>The two most common ways to implement a stack is with a list or an array</p>
	  	<ol>
	  		<li><i>Linked List</i> - using a linked list you can implement push() by adding another node that points to the previous head, pop() & peek() by keeping track of the head of the list.</li>
	  		<li><i>Array</i> - using an array you can implement push() by adding a new element to the first available index, pop() & peek() by keeping track of the current top of the stack i.e. the last index that has a value in the array.</li>
	  	</ol>

	  	<br/>
	  	<p>Before moving on take the time to implement a stack using one of the above methods and save your progress.</p>
	  	<div id="editor" style="height: 300px; width: 800px; float: top; position: relative;">Implement Stack Here</div>
	  	<button class="btn">Save</button>
	  	<br/>

	  	<h3>Sample Interview Questions</h3>
	  	<p>Besides being asked to implement a Stack or a variation of a Stack, there are a variety of questions that are easily solved with a stack. Typically these questions revolve around recursion through using a Stack or an operation that should happen in LIFO order. Try the following to get a better feel for Stacks.</p>

	  	<p><b>1</b>. Implement a pre-order calculator. For example an input such as (+ 1 2 - 5) should be evaluated as (5 - (1 + 2)).</p>
	  	<div id="editor_1" style="height: 300px; width: 800px; float: top; position: relative;">Implement Code Here</div>
	  	<button class="btn">Save</button>
	  	<br/>

	  </div>
	</div>
  <hr>
	<footer>
	  <p>Developed by Don Yu & Jon Jia at Columbia's 2013 DevFest</p>
	</footer>
</div>

<script src="http://d1n0x3qji82z53.cloudfront.net/src-min-noconflict/ace.js" type="text/javascript" charset="utf-8"></script>
<script>
    var editor = ace.edit("editor");
    editor.setTheme("ace/theme/monokai");
    editor.getSession().setMode("ace/mode/javascript");

    var editor_1 = ace.edit("editor_1");
    editor_1.setTheme("ace/theme/monokai");
    editor_1.getSession().setMode("ace/mode/javascript");
</script>